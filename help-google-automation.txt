Print LSB (Linux Standard Base) and Distribution information.

lsb_release -a


python --version
python -V
python2 --version
python3 --version


shebang line examples
#!/usr/bin/env python3
#!/usr/bin/python


Ubuntu:
ls /usr/lib/python3.8/dist-packages
Manjaro:
ls /usr/lib/python3.8


__init__.py



read /write files
-----------------
file = open('test.txt')
file.close()

with open('test.txt') as file:
    for line in file:
        print(line.strip())

line = file.readline()
next_line = file.readline()
rest_of_file = file.read()

lines = file.readlines()


modes:
'r'	open for reading (default)
'w'	open for writing, truncating the file first !!!
'x'	open for exclusive creation, failing if the file already exists
'a'	open for writing, appending to the end of the file if it exists
'b'	binary mode
't'	text mode (default)
'+'	open for updating (reading and writing)


os
--
https://docs.python.org/3/library/os.html
https://docs.python.org/3/library/os.path.html

os.getcwd()
os.mkdir('temp_dir')
os.chdir('temp_dir')
os.rmdir('temp_dir')
os.listdir('/')
os.listdir(path='.')

os.scandir(path='.')
	Returns an iterator

	Using scandir() instead of listdir() can significantly increase the performance of code that also needs file type or file attribute information


	with os.scandir(path) as it:
	    for entry in it:
	        if not entry.name.startswith('.') and entry.is_file():
	            print(entry.name)


os.remove('my.txt')
os.rename('draft.txt', 'final.txt')
os.path.exists('draft.txt')

os.path.abspath('test_math.py')
os.path.isfile(file)
os.path.isdir(file)
os.path.join(dir, name)
os.path.dirname(path)

os.stat('somefile.txt')


# File size in bytes
os.path.getsize('draft.txt')

# Last modified time (unix time)
os.path.getmtime('draft.txt')

# Return the time of last access of path
os.path.getatime(path)



os.environ
os.environ['HOME']
os.environ['PATH']

os.getenv('HOME')
os.getenv('PATH')
os.putenv(key, value)


os.getpid()
os.getppid()
os.uname()

os.sep
os.linesep


csv
---
https://docs.python.org/3/library/csv.html
https://realpython.com/python-csv/

with open('person.csv', 'r') as f:
    csv_file = csv.reader(f)
    for row in csv_file:
        name, gender, age = row

persons = [['Jan', 'Man', 32], ['Piet', 'Man' ,45], ['Joke' ,'Vrouw', 34]]
with open('my_persons.csv', 'w') as f:
    csv_file = csv.writer(f)
    csv_file.writerows(persons)


with open('personHeader.csv', 'r') as f:
    csv_file = csv.DictReader(f)
    for row in csv_file:
        print(row['Name'], row['Age'])


persons = [{'Name': 'Jan', 'Gender': 'Man', 'Age': 27},
           {'Name': 'Piet', 'Gender': 'Man' ,'Age': 45},
           {'Name': 'Joke' ,'Gender': 'Vrouw', 'Age':34}]
with open('my_persons_header.csv', 'w') as f:
    keys = ['Name', 'Gender', 'Age']
    csv_file = csv.DictWriter(f, fieldnames=keys)
    csv_file.writeheader()
    csv_file.writerows(persons)



math
----
math.pi


datetime
--------
unixtime = os.path.getmtime('test_math.py')
datetime.datetime.fromtimestamp(unixtime)
#datetime.datetime(2020, 10, 9, 17, 30, 52, 145723)


shutil
------
du = shutil.disk_usage("/")
du.free / du.total
du.used / du.total


psutil
------
psutil.cpu_percent(0.1)


requests
--------
# sudo apt install python3-requests
request = requests.get("http://www.google.com")
request.status_code == 200


socket
------
localhost = socket.gethostbyname('localhost') # Returns '127.0.0.1'





----
split()
strip()
word.lower()
word.isalpha()

punctuations = '''!()-[]{};:'"\,<>./?@#$%^&*_~'''
new_file_contents = ''.join(char for char in file_contents if char not in punctuations)
